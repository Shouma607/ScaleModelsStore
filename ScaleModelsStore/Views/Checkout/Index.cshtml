@model ScaleModelsStore.Models.Order

@{
    ViewBag.Title = "Checkout";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/order-form.js" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Order Information</legend>
        <div>
            <div class="order-label">
                @Html.LabelFor(model => model.FirstName, "First name")
            </div>
            <div class="order-field">
                @Html.TextBoxFor(model => model.FirstName, new { @Value = User.Identity.GetFirstName() } )
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>
        <div>
            <div class="order-label">
                @Html.LabelFor(model => model.LastName, "Last name")
            </div>
            <div class="order-field">
                @Html.TextBoxFor(model => model.LastName, new { @Value = User.Identity.GetLastName() } )
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>
        <div>
            <div class="order-label">
                @Html.LabelFor(model => model.DeliveryTypeId, "Delivery Type")
            </div>
            <div class="order-field">
                @Html.DropDownListFor(model=>model.DeliveryTypeId,ViewBag.DeliveryTypeId as SelectList)
                @Html.ValidationMessageFor(model => model.DeliveryTypeId)
            </div>
        </div>
        <div id="DeliveryDependsBlock">
            <div class="order-label">
                @Html.LabelFor(model => model.PostalCode, "Postal code")
            </div>
            <div class="order-field">
                @Html.TextBoxFor(model => model.PostalCode, new { @Value = User.Identity.GetPostalCode() })
                @Html.ValidationMessageFor(model=>model.PostalCode)
            </div>
            <div class="order-label">
                @Html.LabelFor(model=>model.Country,"Country")                
            </div>
            <div class="order-field">
                @Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.Countries, "Text", "Text",User.Identity.GetCountry()), "Select country")
                @Html.ValidationMessageFor(model => model.Country)
            </div>
            <div class="order-label">
                @Html.LabelFor(model => model.City, "City")
            </div>
            <div class="order-field">
                @Html.TextBoxFor(model => model.City, new { @Value = User.Identity.GetCity() })
                @Html.ValidationMessageFor(model=>model.City)
            </div>
            <div class="order-label">
                @Html.LabelFor(model => model.Address, "Address")
            </div>
            <div class="order-field">
                @Html.TextArea("Address", User.Identity.GetAddress())
                @Html.ValidationMessageFor(model=>model.Address)
                
            </div>
        </div>
        <div>
            <div class="order-label">
                @Html.LabelFor(model => model.Phone, "Phone number")
            </div>
            <div class="order-field">
                @Html.TextBoxFor(model => model.Phone, new { @Value = User.Identity.GetPhoneNumber() })
                @Html.ValidationMessageFor(model => model.Phone)
                <p class="validation-rule">
                    examples: +99(999)999-99-99; 999-99-99 
                </p>
            </div>
        </div>
        <div>
            <div class="order-label">
                @Html.LabelFor(model => model.Email, "E-mail address")
            </div>
            <div class="order-field">
                @Html.TextBoxFor(model => model.Email, new { @Value = User.Identity.GetEmail() })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        <div class="order-button">
            <input class="submit-button" type="submit" value="Create Order" />
        </div>
    </fieldset>
}
