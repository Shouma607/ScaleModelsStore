@model ScaleModelsStore.Models.Order

@{
    ViewBag.Title = "Checkout";
}
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script src="~/Scripts/order-form.js" type="text/javascript"></script>
<script src="~/Scripts/account-address-to-controls.js" type="text/javascript"></script>
@using (Html.BeginForm("Index", "Checkout", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "OrderCheckout" }))
{
    @Html.AntiForgeryToken()
    <h4>Order information</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, "First name", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.FirstName, new { @Value = User.Identity.GetFirstName(), @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.LastName, "Last name", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.LastName, new { @Value = User.Identity.GetLastName(), @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DeliveryTypeId, "Delivery Type", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DeliveryTypeId, ViewBag.DeliveryTypeId as SelectList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.DeliveryTypeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div id="DeliveryDependsBlock">
        @if (User.Identity.IsAuthenticated)
        {
            <div class="form-group">
                @Html.Label("Address option", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownList("Addresses", new SelectList(ViewBag.Addresses, "Text", "Text"), new { @class = "form-control" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.PostalCode, "Postal code", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Country, "Country", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Country, new SelectList(ViewBag.Countries, "Text", "Text"), "Select country", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.City, "City", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Address", new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Phone, "Phone number", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Phone, new { @Value = User.Identity.GetPhoneNumber(), @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger"})
            <small id="inputHelp" class="form-text text-muted">
                examples: +99(999)999-99-99; 999-99-99
            </small>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Email, "E-mail address", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Email, new { @Value = User.Identity.GetEmail(), @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input class="btn btn-outline-primary" type="submit" value="Create Order" />
        </div>
    </div>
}
